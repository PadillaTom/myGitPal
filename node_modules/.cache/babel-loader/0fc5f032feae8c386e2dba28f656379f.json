{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/myGitPal/src/Components/Charts/ExampleChart.js\";\nimport React from \"react\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\"; // Charts\n\nimport SelectedChart from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactFC.fcRoot(FusionCharts, SelectedChart, FusionTheme);\n\nconst ChartComponent = ({\n  data\n}) => {\n  // *** Chart Config ***    \n  const chartConfigs = {\n    type: \"column2d\",\n    // The chart type\n    width: \"700\",\n    // Width of the chart\n    height: \"400\",\n    // Height of the chart\n    dataFormat: \"json\",\n    // Data type\n    dataSource: {\n      // Chart Configuration\n      chart: {\n        //Set the chart caption\n        caption: \"Countries With Most Oil Reserves [2017-18]\",\n        //Set the chart subcaption\n        subCaption: \"In MMbbl = One Million barrels\",\n        //Set the x-axis name\n        xAxisName: \"Country\",\n        //Set the y-axis name\n        yAxisName: \"Reserves (MMbbl)\",\n        numberSuffix: \"K\",\n        //Set the theme for your chart\n        theme: \"fusion\"\n      },\n      // Data passed as Props:\n      data: data\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ReactFC, { ...chartConfigs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n};\n\n_c = ChartComponent;\nexport default ChartComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/myGitPal/src/Components/Charts/ExampleChart.js"],"names":["React","ReactFC","FusionCharts","SelectedChart","FusionTheme","fcRoot","ChartComponent","data","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,WAAP,MAAwB,+CAAxB;;AACAH,OAAO,CAACI,MAAR,CAAeH,YAAf,EAA6BC,aAA7B,EAA4CC,WAA5C;;AAEA,MAAME,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAE/B;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,UADW;AACC;AAClBC,IAAAA,KAAK,EAAE,KAFU;AAEH;AACdC,IAAAA,MAAM,EAAE,KAHS;AAGF;AACfC,IAAAA,UAAU,EAAE,MAJK;AAIG;AACpBC,IAAAA,UAAU,EAAE;AACZ;AACAC,MAAAA,KAAK,EAAE;AACP;AACAC,QAAAA,OAAO,EAAE,4CAFF;AAGP;AACAC,QAAAA,UAAU,EAAE,gCAJL;AAKP;AACAC,QAAAA,SAAS,EAAE,SANJ;AAOP;AACAC,QAAAA,SAAS,EAAE,kBARJ;AASPC,QAAAA,YAAY,EAAE,GATP;AAUP;AACAC,QAAAA,KAAK,EAAE;AAXA,OAFK;AAeZ;AACAb,MAAAA,IAAI,EAAEA;AAhBM;AALK,GAArB;AAwBA,sBAAQ,QAAC,OAAD,OAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CA5BD;;KAAMF,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionCharts from \"fusioncharts\";\n\n// Charts\nimport SelectedChart from \"fusioncharts/fusioncharts.charts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nReactFC.fcRoot(FusionCharts, SelectedChart, FusionTheme);\n\nconst ChartComponent = ({data}) => {\n\n    // *** Chart Config ***    \n    const chartConfigs = {\n        type: \"column2d\", // The chart type\n        width: \"700\", // Width of the chart\n        height: \"400\", // Height of the chart\n        dataFormat: \"json\", // Data type\n        dataSource: {\n        // Chart Configuration\n        chart: {\n        //Set the chart caption\n        caption: \"Countries With Most Oil Reserves [2017-18]\",\n        //Set the chart subcaption\n        subCaption: \"In MMbbl = One Million barrels\",\n        //Set the x-axis name\n        xAxisName: \"Country\",\n        //Set the y-axis name\n        yAxisName: \"Reserves (MMbbl)\",\n        numberSuffix: \"K\",\n        //Set the theme for your chart\n        theme: \"fusion\"\n      },\n        // Data passed as Props:\n        data: data\n    }\n  };\n    return (<ReactFC {...chartConfigs} />)\n}\nexport default ChartComponent;"]},"metadata":{},"sourceType":"module"}