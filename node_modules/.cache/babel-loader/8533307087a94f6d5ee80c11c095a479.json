{"ast":null,"code":"var _jsxFileName = \"/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/myGitPal/src/Components/Charts/ExampleChart.js\";\n// STEP 1 - Include Dependencies\n// Include react\nimport React from \"react\"; // Include the react-fusioncharts component\n\nimport ReactFC from \"react-fusioncharts\"; // Include the fusioncharts library\n\nimport FusionCharts from \"fusioncharts\"; // Include the chart type\n\nimport SelectedChart from \"fusioncharts/fusioncharts.charts\"; // Include the theme as fusion\n\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\"; // Adding the chart and theme as dependency to the core fusioncharts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactFC.fcRoot(FusionCharts, SelectedChart, FusionTheme); // STEP 3 - Creating the JSON object to store the chart configurations\n\nconst chartConfigs = {\n  type: \"column2d\",\n  // The chart type\n  width: \"700\",\n  // Width of the chart\n  height: \"400\",\n  // Height of the chart\n  dataFormat: \"json\",\n  // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      //Set the chart caption\n      caption: \"Countries With Most Oil Reserves [2017-18]\",\n      //Set the chart subcaption\n      subCaption: \"In MMbbl = One Million barrels\",\n      //Set the x-axis name\n      xAxisName: \"Country\",\n      //Set the y-axis name\n      yAxisName: \"Reserves (MMbbl)\",\n      numberSuffix: \"K\",\n      //Set the theme for your chart\n      theme: \"fusion\"\n    },\n    // Chart Data\n    data: chartData\n  }\n}; // STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n// class App extends React.Component {\n//   render() {\n//     return (<ReactFC {...chartConfigs} />);\n//   }\n// }\n// export default App;\n// SETP 4 - Creating Functional Component:\n\nconst ChartComponent = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(ReactFC, { ...chartConfigs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n\n_c = ChartComponent;\nexport default ChartComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"sources":["/Users/padillatom/PadillaTom/Tomas/Programacion/Portfolio Projects/myGitPal/src/Components/Charts/ExampleChart.js"],"names":["React","ReactFC","FusionCharts","SelectedChart","FusionTheme","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data","chartData","ChartComponent"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,kCAA1B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,+CAAxB,C,CAEA;;;AACAH,OAAO,CAACI,MAAR,CAAeH,YAAf,EAA6BC,aAA7B,EAA4CC,WAA5C,E,CAEA;;AACA,MAAME,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,UADa;AACD;AAClBC,EAAAA,KAAK,EAAE,KAFY;AAEL;AACdC,EAAAA,MAAM,EAAE,KAHW;AAGJ;AACfC,EAAAA,UAAU,EAAE,MAJO;AAIC;AACpBC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,KAAK,EAAE;AACL;AACAC,MAAAA,OAAO,EAAE,4CAFJ;AAGL;AACAC,MAAAA,UAAU,EAAE,gCAJP;AAKL;AACAC,MAAAA,SAAS,EAAE,SANN;AAOL;AACAC,MAAAA,SAAS,EAAE,kBARN;AASLC,MAAAA,YAAY,EAAE,GATT;AAUL;AACAC,MAAAA,KAAK,EAAE;AAXF,KAFG;AAeV;AACAC,IAAAA,IAAI,EAAEC;AAhBI;AALO,CAArB,C,CA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAY;AAC/B,sBAAQ,QAAC,OAAD,OAAab;AAAb;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAFD;;KAAMe,c;AAGN,eAAeA,cAAf","sourcesContent":["// STEP 1 - Include Dependencies\n// Include react\nimport React from \"react\";\n\n// Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Include the chart type\nimport SelectedChart from \"fusioncharts/fusioncharts.charts\";\n\n// Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\n// Adding the chart and theme as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, SelectedChart, FusionTheme);\n\n// STEP 3 - Creating the JSON object to store the chart configurations\nconst chartConfigs = {\n  type: \"column2d\", // The chart type\n  width: \"700\", // Width of the chart\n  height: \"400\", // Height of the chart\n  dataFormat: \"json\", // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      //Set the chart caption\n      caption: \"Countries With Most Oil Reserves [2017-18]\",\n      //Set the chart subcaption\n      subCaption: \"In MMbbl = One Million barrels\",\n      //Set the x-axis name\n      xAxisName: \"Country\",\n      //Set the y-axis name\n      yAxisName: \"Reserves (MMbbl)\",\n      numberSuffix: \"K\",\n      //Set the theme for your chart\n      theme: \"fusion\"\n    },\n    // Chart Data\n    data: chartData\n  }\n};\n\n\n\n\n// STEP 4 - Creating the DOM element to pass the react-fusioncharts component\n// class App extends React.Component {\n//   render() {\n//     return (<ReactFC {...chartConfigs} />);\n//   }\n// }\n// export default App;\n\n// SETP 4 - Creating Functional Component:\n\nconst ChartComponent = ({data}) => {\n    return (<ReactFC {...chartConfigs} />)\n}\nexport default ChartComponent;"]},"metadata":{},"sourceType":"module"}